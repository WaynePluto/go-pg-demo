basePath: /v1
definitions:
  auth.AssignRoleRequest:
    properties:
      role_id:
        type: string
      user_id:
        type: string
    required:
    - role_id
    - user_id
    type: object
  auth.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  auth.LoginResponse:
    properties:
      access_token:
        type: string
      expires_at:
        type: string
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/auth.UserDTO'
    type: object
  auth.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  auth.RefreshTokenResponse:
    properties:
      access_token:
        type: string
      expires_at:
        type: string
      refresh_token:
        type: string
    type: object
  auth.RoleDTO:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  auth.UserDTO:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
  auth.UserInfoResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      phone:
        type: string
      profile:
        type: string
      roles:
        items:
          $ref: '#/definitions/auth.RoleDTO'
        type: array
      updated_at:
        type: string
      username:
        type: string
    type: object
  permission.CreatePermissionReq:
    properties:
      metadata:
        $ref: '#/definitions/permission.Metadata'
      name:
        type: string
      type:
        type: string
    required:
    - name
    - type
    type: object
  permission.Metadata:
    properties:
      code:
        type: string
      method:
        type: string
      path:
        type: string
    type: object
  permission.PermissionListRes:
    properties:
      list:
        items:
          $ref: '#/definitions/permission.PermissionRes'
        type: array
      total:
        type: integer
    type: object
  permission.PermissionRes:
    properties:
      created_at:
        type: string
      id:
        type: string
      metadata:
        $ref: '#/definitions/permission.Metadata'
      name:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  permission.UpdatePermissionReq:
    properties:
      metadata:
        $ref: '#/definitions/permission.Metadata'
      name:
        type: string
      type:
        type: string
    type: object
  pkgs.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  role.AssignPermissionsReq:
    properties:
      permission_ids:
        items:
          type: string
        minItems: 1
        type: array
    required:
    - permission_ids
    type: object
  role.CreateRoleReq:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  role.RoleListRes:
    properties:
      list:
        items:
          $ref: '#/definitions/role.RoleRes'
        type: array
      total:
        type: integer
    type: object
  role.RoleRes:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  role.UpdateRoleReq:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  template.CreateTemplateReq:
    properties:
      name:
        type: string
      num:
        maximum: 1000
        minimum: 1
        type: integer
    required:
    - name
    type: object
  template.CreateTemplatesReq:
    properties:
      templates:
        items:
          $ref: '#/definitions/template.CreateTemplateReq'
        minItems: 1
        type: array
    required:
    - templates
    type: object
  template.DeleteTemplatesReq:
    properties:
      ids:
        items:
          type: string
        minItems: 1
        type: array
    required:
    - ids
    type: object
  template.TemplateListRes:
    properties:
      list:
        items:
          $ref: '#/definitions/template.TemplateRes'
        type: array
      total:
        type: integer
    type: object
  template.TemplateRes:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      num:
        type: integer
      updated_at:
        type: string
    type: object
  template.UpdateTemplateReq:
    properties:
      name:
        type: string
      num:
        maximum: 1000
        minimum: 1
        type: integer
    type: object
  user.AssignRolesToUserReq:
    properties:
      role_ids:
        description: 角色ID列表
        items:
          type: string
        minItems: 1
        type: array
    required:
    - role_ids
    type: object
  user.CreateUserReq:
    properties:
      password:
        type: string
      phone:
        maxLength: 11
        minLength: 11
        type: string
      profile:
        $ref: '#/definitions/user.Profile'
      username:
        type: string
    required:
    - password
    - phone
    - username
    type: object
  user.Profile:
    additionalProperties: true
    type: object
  user.UpdateUserReq:
    properties:
      password:
        description: 密码，前端进行MD5加密
        type: string
      profile:
        allOf:
        - $ref: '#/definitions/user.Profile'
        description: 个人信息
    type: object
  user.UserListRes:
    properties:
      list:
        items:
          $ref: '#/definitions/user.UserRes'
        type: array
      total:
        type: integer
    type: object
  user.UserRes:
    properties:
      created_at:
        type: string
      id:
        type: string
      phone:
        type: string
      profile:
        $ref: '#/definitions/user.Profile'
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: https://www.swagger.io/support
  description: This is a sample server for go-pg-demo server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://swagger.io/terms/
  title: Go-PG Demo API
  version: "1.0"
paths:
  /auth/assign-role:
    post:
      consumes:
      - application/json
      description: 为用户分配角色
      parameters:
      - description: 分配角色请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.AssignRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 分配成功，返回用户角色关联ID
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 分配角色
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: 用户登录请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功，返回访问令牌等信息
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth.LoginResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "401":
          description: 用户名或密码错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 用户登录
      tags:
      - auth
  /auth/me:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功，返回用户信息
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth.UserInfoResponse'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 获取当前用户信息
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: 刷新访问令牌
      parameters:
      - description: 刷新令牌请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 刷新成功，返回新的访问令牌等信息
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth.RefreshTokenResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "401":
          description: 无效的刷新令牌
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 刷新token
      tags:
      - auth
  /permission:
    post:
      consumes:
      - application/json
      description: 创建权限
      parameters:
      - description: 创建权限请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/permission.CreatePermissionReq'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功，返回权限ID
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      security:
      - JWT: []
      summary: 创建权限
      tags:
      - permission
  /permission/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除权限
      parameters:
      - description: 权限ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功，返回影响行数
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  format: int64
                  type: integer
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      security:
      - JWT: []
      summary: 根据ID删除权限
      tags:
      - permission
    get:
      consumes:
      - application/json
      description: 根据ID获取权限
      parameters:
      - description: 权限ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功，返回权限信息
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  $ref: '#/definitions/permission.PermissionRes'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "404":
          description: 权限不存在
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      security:
      - JWT: []
      summary: 根据ID获取权限
      tags:
      - permission
    put:
      consumes:
      - application/json
      description: 根据ID更新权限
      parameters:
      - description: 权限ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新权限请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/permission.UpdatePermissionReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/pkgs.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      security:
      - JWT: []
      summary: 根据ID更新权限
      tags:
      - permission
  /permission/list:
    get:
      consumes:
      - application/json
      description: 获取权限列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: pageSize
        type: integer
      - description: 权限名称
        in: query
        name: name
        type: string
      - description: 权限类型
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功，返回权限列表
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  $ref: '#/definitions/permission.PermissionListRes'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      security:
      - JWT: []
      summary: 获取权限列表
      tags:
      - permission
  /role:
    post:
      consumes:
      - application/json
      description: 创建一个新角色
      parameters:
      - description: 创建角色的请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/role.CreateRoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功，返回角色ID
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 创建角色
      tags:
      - role
  /role/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除一个角色
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功，返回影响行数
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  format: int64
                  type: integer
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 删除角色
      tags:
      - role
    get:
      consumes:
      - application/json
      description: 根据ID获取单个角色的详细信息
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功，返回角色信息
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  $ref: '#/definitions/role.RoleRes'
              type: object
        "404":
          description: 角色不存在
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 获取角色详情
      tags:
      - role
    put:
      consumes:
      - application/json
      description: 根据ID更新角色的名称或描述
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新角色的请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/role.UpdateRoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/pkgs.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 更新角色信息
      tags:
      - role
  /role/{id}/permission:
    post:
      consumes:
      - application/json
      description: 清空角色现有权限，并重新关联新的权限列表
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: string
      - description: 分配权限的请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/role.AssignPermissionsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 分配成功
          schema:
            $ref: '#/definitions/pkgs.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 为角色分配权限
      tags:
      - role
  /role/list:
    get:
      consumes:
      - application/json
      description: 根据条件分页获取角色列表
      parameters:
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: pageSize
        type: integer
      - description: 按名称模糊查询
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功，返回角色列表和总数
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  $ref: '#/definitions/role.RoleListRes'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 分页查询角色
      tags:
      - role
  /template:
    post:
      consumes:
      - application/json
      description: 创建模板
      parameters:
      - description: 创建模板请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/template.CreateTemplateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功，返回模板ID
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 创建模板
      tags:
      - template
  /template/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除模板
      parameters:
      - description: 模板ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功，返回影响行数
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  format: int64
                  type: integer
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 根据ID删除模板
      tags:
      - template
    get:
      consumes:
      - application/json
      description: 根据ID获取模板
      parameters:
      - description: 模板ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功，返回模板信息
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  $ref: '#/definitions/template.TemplateRes'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "404":
          description: 模板不存在
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 根据ID获取模板
      tags:
      - template
    put:
      consumes:
      - application/json
      description: 根据ID更新模板
      parameters:
      - description: 模板ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新模板请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/template.UpdateTemplateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/pkgs.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 根据ID更新模板
      tags:
      - template
  /template/batch-create:
    post:
      consumes:
      - application/json
      description: 批量创建模板
      parameters:
      - description: 批量创建模板请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/template.CreateTemplatesReq'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功，返回模板ID列表
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 批量创建模板
      tags:
      - template
  /template/batch-delete:
    post:
      consumes:
      - application/json
      description: 批量删除模板
      parameters:
      - description: 批量删除模板请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/template.DeleteTemplatesReq'
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/pkgs.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 批量删除模板
      tags:
      - template
  /template/list:
    get:
      consumes:
      - application/json
      description: 获取模板列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: pageSize
        type: integer
      - description: 模板名称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功，返回模板列表
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  $ref: '#/definitions/template.TemplateListRes'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 获取模板列表
      tags:
      - template
  /user:
    post:
      consumes:
      - application/json
      description: 通过提供用户名、手机号、密码等信息创建一个新的用户账户。成功后返回新创建用户的唯一标识符(UUID)。
      parameters:
      - description: 创建用户所需的请求体参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建用户，返回用户ID
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 请求参数验证失败或格式不正确
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误，无法创建用户
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 创建一个新的用户账户
      tags:
      - 用户管理
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: 通过指定的用户唯一标识符(UUID)来删除特定用户。这是一个永久性操作，请谨慎使用。
      parameters:
      - description: 用户唯一标识符(UUID)
        format: UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功删除用户，返回受影响的行数
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  format: int64
                  type: integer
              type: object
        "400":
          description: 提供的用户ID格式无效
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误，无法删除用户
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 根据用户ID删除用户
      tags:
      - 用户管理
    get:
      consumes:
      - application/json
      description: 通过指定的用户唯一标识符(UUID)来检索特定用户的详细信息。
      parameters:
      - description: 用户唯一标识符(UUID)
        format: UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取用户信息
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  $ref: '#/definitions/user.UserRes'
              type: object
        "400":
          description: 提供的用户ID格式无效
          schema:
            $ref: '#/definitions/pkgs.Response'
        "404":
          description: 未找到指定ID的用户
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误，无法获取用户信息
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 根据用户ID获取用户详情
      tags:
      - 用户管理
    put:
      consumes:
      - application/json
      description: 通过指定的用户唯一标识符(UUID)来更新特定用户的密码和个人信息。只会更新请求中包含的字段。
      parameters:
      - description: 用户唯一标识符(UUID)
        format: UUID
        in: path
        name: id
        required: true
        type: string
      - description: 需要更新的用户信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功更新用户信息
          schema:
            $ref: '#/definitions/pkgs.Response'
        "400":
          description: 请求参数验证失败或格式不正确
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误，无法更新用户信息
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 根据用户ID更新用户信息
      tags:
      - 用户管理
  /user/{id}/role:
    post:
      consumes:
      - application/json
      description: 为指定用户分配一个或多个角色。该操作会完全替换用户当前的所有角色关系。
      parameters:
      - description: 用户唯一标识符(UUID)
        format: UUID
        in: path
        name: id
        required: true
        type: string
      - description: 要分配给用户的角色ID列表
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.AssignRolesToUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功为用户分配角色
          schema:
            $ref: '#/definitions/pkgs.Response'
        "400":
          description: 请求参数验证失败或格式不正确
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误，无法为用户分配角色
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 为用户分配角色
      tags:
      - 用户管理
  /user/list:
    get:
      consumes:
      - application/json
      description: 获取系统中的用户列表，支持按手机号模糊搜索，并提供分页功能。
      parameters:
      - default: 1
        description: 页码，从1开始计算
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: 每页条目数
        in: query
        maximum: 100
        minimum: 1
        name: pageSize
        type: integer
      - description: 手机号模糊搜索关键字
        in: query
        name: phone
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取用户列表
          schema:
            allOf:
            - $ref: '#/definitions/pkgs.Response'
            - properties:
                data:
                  $ref: '#/definitions/user.UserListRes'
              type: object
        "400":
          description: 请求参数验证失败或格式不正确
          schema:
            $ref: '#/definitions/pkgs.Response'
        "500":
          description: 服务器内部错误，无法获取用户列表
          schema:
            $ref: '#/definitions/pkgs.Response'
      summary: 获取用户列表（支持分页和筛选）
      tags:
      - 用户管理
securityDefinitions:
  JWT:
    description: JWT token for authentication
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
