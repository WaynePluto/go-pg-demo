// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"go-pg-demo/internal/api/v1"
	"go-pg-demo/internal/middlewares"
	"go-pg-demo/internal/modules/template"
	"go-pg-demo/internal/pkgs"
)

// Injectors from wire.go:

func InitializeApp() (*App, func(), error) {
	engine := NewGin()
	config, err := pkgs.NewConfig()
	if err != nil {
		return nil, nil, err
	}
	logger, err := pkgs.NewLogger(config)
	if err != nil {
		return nil, nil, err
	}
	db, err := pkgs.NewConnection(config)
	if err != nil {
		return nil, nil, err
	}
	handler := template.NewTemplateHandler(db, logger)
	registerRouter := v1.NewRegisterRouter(engine, handler)
	useMiddlewares := middlewares.NewUseMiddlewares(engine, logger)
	app, err := NewApp(engine, logger, config, db, registerRouter, useMiddlewares)
	if err != nil {
		return nil, nil, err
	}
	return app, func() {
	}, nil
}
